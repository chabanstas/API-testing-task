# Name of the GitHub Actions
name: Continuous Test
 
# Set the actions that triggers the workflow
on:
# Trigger the workflow on the push event, only in dev branch
  push:
    branches: [ main ]
 
 
jobs:
  build:
    runs-on: ubuntu-latest
 
 
    strategy:
      matrix:
        node-version: [16]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
       
 
    steps:
      # Check out the repo, so the job can access it.  
      - uses: actions/checkout@v2
 
 
      # Install Node on the runner
      - name: Use Node.js ${{ matrix.node-version }}      
        uses: actions/setup-node@v1
       
      # Install newman globally, the reporter for slack and install the html extra reporter
      - name: Install newman
        run: |
         npm install -g newman
         npm install -g newman-reporter-slackreporter
         npm install -g newman-reporter-htmlextra
 
 
      # Create directory to upload test results
      - name: Make Directory for Test Results
        run: mkdir -p testArtifacts
 
 
      # Run postman collection
      - name: Run Postman Collection        
        run: |
 
          newman  run https://api.getpostman.com/collections/22196453-437e724d-9e89-4d34-b525-625fdd5cba57?apikey=PMAK-635029759be14446f29dfa4e-9ed2f7be7ec14eaf1a864f2feece796f45 -e https://api.getpostman.com/environments/22196453-a04cd87a-afd3-4bec-b3c2-0d5dd508e246?apikey=PMAK-635029759be14446f29dfa4e-9ed2f7be7ec14eaf1a864f2feece796f45 --suppress-exit-code -r slackreporter,htmlextra --reporter-htmlextra-export testArtifacts/htmlreport.html --reporter-slackreporter-webhookurl https://hooks.slack.com/services/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
     
      # Upload the reports to TestArtifacts directory
      - name: Output the results
        uses: actions/upload-artifact@v2
        with:
         name: Reports
         path: testArtifacts
